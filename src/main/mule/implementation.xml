<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:american-flights-api="http://www.mulesoft.org/schema/mule/american-flights-api" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/american-flights-api http://www.mulesoft.org/schema/mule/american-flights-api/current/mule-american-flights-api.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getFlights" doc:id="295c40c7-0219-4481-9405-1d0ee17248f6" >
		<set-variable value="#[message.attributes.queryParams.airline]" doc:name="airline" doc:id="e3e15cf8-64b9-48bc-a0fa-ea7a1920d52e" variableName="airline"/>
		<flow-ref doc:name="setCode" doc:id="45680b8b-093a-4938-b4da-bc0d89e52870" name="setCode"/>
		<validation:is-true doc:name="Is Valid Destination" doc:id="0a299278-c386-402e-b602-0be7acb6bbf7" expression="#[['SFO','LAX','CLE','PDX','PDF'] contains vars.code]" message="#['Invalid Destination' ++ ' ' ++ (vars.code default ' ')]">
			<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:INVALID_DESTINATION" />
		</validation:is-true>
		<choice doc:name="Choice" doc:id="e605823b-921f-45f9-8a1f-bc9e5a7494cd" >
			<when expression='#[vars.airline == "american"]'>
				<flow-ref doc:name="getAmericanFlights" doc:id="8ed149e6-3d6e-4746-8152-cb884356573b" name="getAmericanFlights"/>
			</when>
			<when expression='#[vars.airline == "united"]'>
				<flow-ref doc:name="getUnitedFlights" doc:id="4a7bcec5-9997-48fe-9dc3-72a6d567b38c" name="getUnitedFlights"/>
			</when>
			<when expression='#[vars.airline == "delta"]'>
				<flow-ref doc:name="getDeltaFlights" doc:id="5570d61a-e6ff-4cfe-b261-526f516de2f0" name="getDeltaFlights"/>
			</when>
			<otherwise >
				<flow-ref doc:name="getAllAirlineFlights" doc:id="4b694c52-caa4-4b49-afb0-d2a4f434bf6d" name="getAllAirlineFlights"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="[Flight] to JSON" doc:id="dbb37370-4641-49e0-8fc4-e87f39112e68" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="3b98bb61-425c-4156-b560-85e203c8cf9b" />
		
	</flow>
	<flow name="getAllAirlineFlights" doc:id="fb172dca-9d98-4280-a54b-ac91153d4f17" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="4718d696-3001-4e87-8547-5738fe6bd029" >
			<route >
				<try doc:name="Try" doc:id="a40ec391-7341-4338-a197-a20ac4d15e74" >
					<flow-ref doc:name="getAmericanFlights" doc:id="0a9ac234-8fe7-455e-b418-822946cfdd54" name="getAmericanFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="676c466f-b893-43b1-bacd-e8af3403df60" type="ANY">
							<ee:transform doc:name="[]" doc:id="86dbeafb-04de-4a9b-9911-09c4634b3c4e" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="2fa86587-d538-4d51-9867-cbf6c8824990" >
					<flow-ref doc:name="getUnitedFlights" doc:id="642496eb-d0cc-4e9b-a487-78d8071c29e4" name="getUnitedFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="eabefc79-680d-4a80-9103-233968084512" type="ANY">
							<ee:transform doc:name="[]" doc:id="7972fad3-c758-453d-b02f-30e17feb7281" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="af28a578-6774-4a3c-8fad-b8bc8b3b3df1" >
					<flow-ref doc:name="getDeltaFlights" doc:id="343a3994-f0cc-494f-bcc6-3df282b0a3f6" name="getDeltaFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="085d809b-27a0-4a35-95e3-05f9c67b9f9d" type="ANY">
							<ee:transform doc:name="[]" doc:id="0cf0dc07-096b-4eda-8724-fb211546456a" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
		</scatter-gather>
		<ee:transform doc:name="Flatten to [Flight]" doc:id="f3a598cc-2142-48b8-b71a-0fbdcd6722af" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
flatten(payload..payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="2b03afd5-ebf3-4842-aee4-a25a2eb05866" />
	</flow>
	<flow name="getDeltaFlights" doc:id="7bcb1b13-8be4-460e-a4bd-d53eb7bddab1" >
		<ee:transform doc:name="Pass Code" doc:id="61ff86bf-1d34-46f4-8e9d-91a03246ddf6" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: vars.code
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<wsc:consume operation="findFlight" doc:name="GET flights" doc:id="c242218b-0dce-47ff-a3b7-bfbf79d78a4d" config-ref="Delta_Web_Service_Consumer_Config"/>
		<ee:transform doc:name="SOAP to [flight]" doc:id="d5b9e217-e3f7-47f1-b51a-304ad379848b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
ns ns0 http://soap.training.mulesoft.com/
---
payload.body.ns0#findFlightResponse.*return map ( return , indexOfReturn ) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="6a7b3e62-f1c5-4b3f-99a0-4d5c9d9d4ca5" />
	</flow>
	<sub-flow name="setCode" doc:id="fe7fdfe2-c994-48ee-bfdb-222909ef6ecb" >
		<set-variable value='#[message.attributes.queryParams.code]' doc:name="code" doc:id="e01ec323-2566-41a1-9337-d182a8a18f9f" variableName="code"/>
	</sub-flow>
	<flow name="getAmericanFlights" doc:id="69281de8-8c8c-43b9-b77f-bfe39714233d" >
		<american-flights-api:get-flights doc:name="Get flights" doc:id="b1ac6f35-3ec5-4943-8745-daff9ee0fe0a" config-ref="American_Flights_API_Config" client-id="${american.client_id}" client-secret="${american.client_secret}" destination="#[vars.code]"/>
		<ee:transform doc:name="JSON to [flight]" doc:id="790babc8-9295-458b-9c8f-31bae81a99ac" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airlineName: "American",
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane."type",
	price: payload01.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="43a25e00-0c8c-4ec4-95b4-6e2afc765fae" />
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="e92c2c20-49c9-4f01-857c-fe77b9573fd5" type="AMERICAN-FLIGHTS-API:BAD_REQUEST">
				<ee:transform doc:name="Transform Message" doc:id="2de18b3c-8dee-4a3b-b07d-71ae02cf28ab">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message" : "No flights to " ++ vars.code as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="200" doc:name="httpStatus" doc:id="560dd30f-0ca9-46fb-a49e-d050f767344c" variableName="httpStatus" />
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="getUnitedFlights" doc:id="e42c8846-c99b-4342-b7f6-a20403343964" >
		<http:request method="GET" doc:name="Get flights" doc:id="2bf5f4f4-c151-444d-b5d1-3a0be790c0aa" config-ref="HTTP_Request_config_training" path="/united/flights/{dest}">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"dest" : vars.code
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="JSON to [flight]" doc:id="af77aac2-a52c-42c7-9ee8-e2d1fedf191d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.flights map ( flight , indexOfFlight ) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="c551d735-6fe1-49d3-9bf1-9e82339da7e0" />
	</flow>
	<flow name="postFlight" doc:id="f973399b-f532-4550-8929-18e007af5d05" >
		<ee:transform doc:name="Transform Message" doc:id="80e085bf-7a5e-4151-8904-7b045d95dea6" >
			<ee:message >
				<ee:set-payload resource="json_flight_playground.dwl" />
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="DWoutput" ><![CDATA[%dw 2.0
output application/xml
---
data: {
	hub: "MUA",
	flight @(airline: payload.airline):{
	code: payload.toAirportCode
}
}
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="be117230-50ed-4ca6-8c7c-5d27868685a0" />
	</flow>
	<flow name="postMultipleFlights" doc:id="cd644f60-0da1-4b0c-bb5e-e582c20d474a" >
		<http:listener doc:name="Listener" doc:id="ff91ca44-521e-4653-a8e6-dbdac1451072" config-ref="HTTP_Listener_config" path="multipleflights" allowedMethods="POST"/>
		<ee:transform doc:name="Transform Message" doc:id="7552a18d-7b56-485c-999d-8dbc7d1ef72e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
type currency = String {format : "###.00"}
type Flight = Object {class: "com.mulesoft.training.flight"}
//var numSeats = 400
//var numSeats = (x=400) -> x
/*var numSeats = (planeType :  String)->
	if(planeType contains('737'))
		150
	else
		300*/
fun getNumSeats( planeType: String)= do{
	if(planeType contains('737'))
		150
	else
		300
}
---
flights: payload..*return map(object,index)  ->  {
			destination: object.destination,
			price: object.price as Number as currency,
			//totalSeats: getNumSeats(object.planeType as String),
			planeType: upper(object.planeType as String),
			departureDate: object.departureDate as Date {format: "yyyy/MM/dd"} as String {format: "MMM dd, yyyy"}
			
		} as Flight
	
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="71f300ca-9765-42fb-8cc3-88882d23471c" />
	</flow>
</mule>
